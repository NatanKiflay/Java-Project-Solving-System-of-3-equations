/*This too was a java project that I created in my CS class. I didn't need much support with this assignment as it was pretty basic 
but I still think it's pretty interesting to have a program that solves systems of equations with three equations including 3 variables.
The rules to this assignment were:

Hide Assignment Information
Instructions
Write a java program that will solve a system of 3 equations, in 3 variables i.e. x,y,z. 
All test data to be used will have a unique solution (accounting for special cases will be worth bonus marks).

You are to only use your Main class.
Your program is to provide a general description of what it does, and how the user is to use it (input values etc).
Your program must continue (loop) until the user indicates that they would like to exit.
Once the user enters the x,y,z, and constant values for an equation your program is to confirm the input is correct and it is to do this for each equation entered 
(please use double precision values).
There are 3 equations in 3 unknowns with a constant so you will be using a 3x4 array of double precision values)
Once the user has entered all 3 equations your program is to appropriately format and display these equations to the screen in a matrix form 
(formatted printing of the double precision values will be important here). Please create a simple display method for this task since you will have to display data at various stages in the process.
Required Display stages:
Row 1: x,y,z,k1; Row 2: x,y,z,k2; Row 3: x,y,z,k3
Row 1: x,y,z,k1; Row 2: 0,y,z,k2; Row 3: 0,0,z,k3
Row 1: x,y,0,k1; Row 2: 0,y,0,k2; Row 3: 0,0,z,k3
Row 1: x,0,0,k1; Row 2: 0,y,0,k2; Row 3: 0,0,z,k3
The values displayed throughout this program must be formatted to all 10 digits to the left, and right of the decimal point.

All the code is in my main (The code below). 
*/

package com.company;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        // write your code here
        int MAXROW = 3;
        int MAXCOL = 4;
        double[][] myData = new double[MAXROW][MAXCOL];
        double[][] temp = new double[MAXROW][MAXCOL];
        Scanner UIn = new Scanner(System.in);
        double x, y, z;
        boolean done = false;
        boolean finished = true;
        String wrongUIn;
        boolean Restart = true;
        boolean unique = true;
        // Ask for the first set of Equations
        do {
            System.out.println("\tWelcome!");
            System.out.println("\tThe main function of this program is to solve a system of 3 equations, in 3 variables i.e. x,y,z!");
            System.out.println("\tThis program will solve the equations using the Gaussian Elimination method!");
            System.out.println("\tYou will now insert all three equations one by one in the format of x + y + z = k");
            System.out.println("\tMake sure to only insert numbers as the formatting has already been accounted for!");
            System.out.println();
            Restart=true;
            unique=true;
            done=false;
            finished=true;
            for (int i = 0; i < MAXROW; i++) {
                for (int k = 0; k < 1; k++) {
                    done = false;
                    int j = 0;
                    // Inputting the X-Values -------------------------------------------------------------------
                    do {
                        j = 0;

                        do {
                            System.out.println("What is x?");

                            if (UIn.hasNextDouble()) {
                                myData[i][j] = UIn.nextDouble();
                                done = true;
                            } else {
                                wrongUIn = UIn.next();
                                System.out.println("\n\tERROR Data Type:You entered ( " + wrongUIn + " ) for the x value!");
                                System.out.println("\tPlease enter the x value as an integer!\n");
                                done = false;
                            }
                        } while (!done);


                        j++;

                        // Inputting the Y-Values -------------------------------------------------------------------
                        do {
                            System.out.println("What is y?");

                            if (UIn.hasNextDouble()) {
                                myData[i][j] = UIn.nextDouble();
                                done = true;
                            } else {
                                wrongUIn = UIn.next();
                                System.out.println("\n\tERROR Data Type:You entered ( " + wrongUIn + " ) for the y value!");
                                System.out.println("\tPlease enter the y value as an integer!\n");
                                done = false;
                            }
                        } while (!done);
                        j++;

                        // Inputting the Z-Values -------------------------------------------------------------------
                        do {
                            System.out.println("What is z?");

                            if (UIn.hasNextDouble()) {
                                myData[i][j] = UIn.nextDouble();
                                done = true;
                            } else {
                                wrongUIn = UIn.next();
                                System.out.println("\n\tERROR Data Type:You entered ( " + wrongUIn + " ) for the z value!");
                                System.out.println("\tPlease enter the z value as an integer!\n");
                                done = false;
                            }
                        } while (!done);
                        j++;

                        // Inputting the K-Values -------------------------------------------------------------------
                        do {
                            System.out.println("What is k?");

                            if (UIn.hasNextDouble()) {
                                myData[i][j] = UIn.nextDouble();
                                done = true;
                            } else {
                                wrongUIn = UIn.next();
                                System.out.println("\n\tERROR Data Type:You entered ( " + wrongUIn + " ) for the k value!");
                                System.out.println("\tPlease enter the k value as an integer!\n");
                                done = false;
                            }
                        } while (!done);
                        j++;

                        do {
                            done = false;
                            finished = false;
                            System.out.println("The equation you have entered is " + myData[i][0] + ", " + myData[i][1] + ", " + myData[i][2] + ", " + myData[i][3] + "");
                            System.out.println("If this is the correct equation type 'YES' below, if not, type 'NO' below");
                            wrongUIn = UIn.next();

                            if (wrongUIn.toLowerCase().equals("yes")) {
                                System.out.println("Perfect!");
                                done = true;
                                finished = true;
                            }

                            if (wrongUIn.toLowerCase().equals("no")) {
                                System.out.println("You will now re-enter the previous values");
                                done = true;
                                finished = false;

                            }


                        } while (!done);

                    } while (!finished);
                }
            }


            // First Checkpoint
            System.out.println();
            System.out.print("1. ");
            System.out.printf("\tRow 1: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[0][0], myData[0][1], myData[0][2], myData[0][3]);
            System.out.printf("\tRow 2: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[1][0], myData[1][1], myData[1][2], myData[1][3]);
            System.out.printf("\tRow 3: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[2][0], myData[2][1], myData[2][2], myData[2][3]);
            System.out.println();

            if (myData[0][0] == 0 && myData[1][0] == 0 && myData[2][0] == 0) {
                System.out.println("There is no unique solution!");
                unique = false;
            }
if (unique) {
    if (myData[0][0] == 0 && myData[1][0] != 0) {
        for (int k = 0; k < MAXCOL; k++) {
            temp[0][k] = myData[0][k];
        }
        for (int k = 0; k < MAXCOL; k++) {
            myData[0][k] = myData[1][k];
        }
        for (int k = 0; k < MAXCOL; k++) {
            myData[1][k] = temp[0][k];
        }
    }
    if (myData[0][0] == 0 && myData[2][0] != 0) {
        for (int k = 0; k < MAXCOL; k++) {
            temp[0][k] = myData[0][k];
        }
        for (int k = 0; k < MAXCOL; k++) {
            myData[0][k] = myData[2][k];
        }
        for (int k = 0; k < MAXCOL; k++) {
            myData[2][k] = temp[0][k];
        }
    }


    if (myData[1][1] == 0 && myData[0][1] == 0 && myData[2][1] == 0) {
        System.out.println("There is no unique solution!");
        unique = false;
    }

    if (myData[2][2] == 0 && myData[0][2] == 0 && myData[1][2] == 0) {
        System.out.println("There is no unique solution!");
        unique = false;
    }
    if (unique) {

        // First I will divide all the rows by their x term to make all the x's.
        // Simplifying the first row so that first x is 1

        for (int i = 0; i < MAXROW; i++) {
            if (i == 1 && myData[i][0] == 0) {
                i++;
            }
            if (i == 2 && myData[i][0] == 0) {
                break;
            }
            for (int k = 0; k < MAXCOL - 1; k++) {
                myData[i][k + 1] = myData[i][k + 1] / myData[i][0];
            }
        }

        for (int i = 0; i < MAXROW; i++) {
            if (i == 1 && myData[i][0] == 0) {
                i++;
            }
            if (i == 2 && myData[i][0] == 0) {
                break;
            }
            for (int k = 0; k < 1; k++) {
                myData[i][k] = myData[i][k] / myData[i][k];
            }
        }
// Just incase the second y is 0
        if (myData[1][1] == 0 && myData[1][0] != 0 && myData[0][1] != 0) {
            for (int k = 0; k < MAXCOL; k++) {
                temp[0][k] = myData[1][k];
            }
            for (int k = 0; k < MAXCOL; k++) {
                myData[1][k] = myData[0][k];
            }
            for (int k = 0; k < MAXCOL; k++) {
                myData[0][k] = temp[0][k];
            }
        }
        if (myData[1][1] == 0 && myData[1][2] != 0 && myData[2][1] != 0) {
            for (int k = 0; k < MAXCOL; k++) {
                temp[0][k] = myData[1][k];
            }
            for (int k = 0; k < MAXCOL; k++) {
                myData[1][k] = myData[2][k];
            }
            for (int k = 0; k < MAXCOL; k++) {
                myData[2][k] = temp[0][k];
            }
        }

// Just in case third z is 0


        // Now I'm multiplying the second row by negative one and adding it to the first row and making the resultant row 1
        for (int i = 1; i < 3; i++) {
            if (i == 1 && myData[i][2] == 0) {
                i++;
            }
            if (i == 2 && myData[i][2] == 0) {
                break;
            }
            for (int k = 0; k < 4; k++) {
                myData[i][k] = (myData[i][k] * -1) + myData[0][k];
            }
        }

        if (myData[1][1] == 0 && myData[2][1] == 0) {
            System.out.println("There is no unique solution!");
            unique = false;
        }
        if (unique) {
            if (myData[1][1] == 0) {
                for (int i = 0; i < MAXCOL; i++) {
                    temp[0][i] = myData[1][i];
                }
                for (int i = 0; i < MAXCOL; i++) {
                    myData[1][i] = myData[2][i];
                }
                for (int i = 0; i < MAXCOL; i++) {
                    myData[2][i] = temp[0][i];
                }
            }

            //Second checkpoint


            for (int i = 1; i < 3; i++) {
                for (int k = 2; k < 4; k++) {
                    if (i == 2 && myData[2][1] == 0) {
                        break;
                    }
                    myData[i][k] = myData[i][k] / myData[i][1];
                }
                if (myData[2][1] != 0) {
                    myData[i][1] = myData[i][1] / myData[i][1];
                }

            }


            for (int k = 0; k < 4; k++) {
                if (k <= 1 && myData[2][1] == 0) {
                    break;
                }
                myData[2][k] = (myData[2][k] * -1) + myData[1][k];
            }

            if (myData[2][2] == 0) {
                System.out.println("There is no unique solution!");
                unique = false;
            }
            if (unique) {
                myData[2][3] = myData[2][3] / myData[2][2];
                myData[2][2] = myData[2][2] / myData[2][2];
                z = myData[2][3];

                System.out.print("2. ");
                System.out.printf("\tRow 1: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[0][0], myData[0][1], myData[0][2], myData[0][3]);
                System.out.printf("\tRow 2: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[1][0], myData[1][1], myData[1][2], myData[1][3]);
                System.out.printf("\tRow 3: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[2][0], myData[2][1], myData[2][2], myData[2][3]);
                System.out.println();

                for (int i = 0; i < 2; i++) {
                    for (int k = 2; k < 3; k++) {
                        myData[i][k] = myData[i][k] * z;
                    }
                }

                for (int i = 0; i < 2; i++) {
                    for (int k = 3; k <= 3; k++) {
                        myData[i][k] = myData[i][k] - myData[i][k - 1];
                        myData[i][k - 1] = myData[i][k - 1] - myData[i][k - 1];
                    }
                }

                y = myData[1][3];
                if (y == 0) {
                    System.out.println("There is no unique solution!");
                    unique = false;
                }
                if (unique) {


                    System.out.print("3. ");
                    System.out.printf("\tRow 1: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[0][0], myData[0][1], myData[0][2], myData[0][3]);
                    System.out.printf("\tRow 2: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[1][0], myData[1][1], myData[1][2], myData[1][3]);
                    System.out.printf("\tRow 3: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[2][0], myData[2][1], myData[2][2], myData[2][3]);
                    System.out.println();


                    myData[0][1] = myData[0][1] * y;
                    myData[0][3] = myData[0][3] - myData[0][1];
                    myData[0][1] = myData[0][1] - myData[0][1];
                    x = myData[0][3];
                    //System.out.println("X is " + x + " ; Y is " + y + " ; Z is " + z);

                    System.out.print("4. ");
                    System.out.printf("\tRow 1: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[0][0], myData[0][1], myData[0][2], myData[0][3]);
                    System.out.printf("\tRow 2: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[1][0], myData[1][1], myData[1][2], myData[1][3]);
                    System.out.printf("\tRow 3: " + "%020.10f; %020.10f; %020.10f; %020.10f", myData[2][0], myData[2][1], myData[2][2], myData[2][3]);
                    System.out.println();
                }
            }
        }
    }
}
            do {

                System.out.println("\nWould you like to leave this program or restart the program, to restart type 'YES', to leave type 'NO' ");
                wrongUIn = UIn.next();
                if (wrongUIn.toLowerCase().equals("no")) {
                    System.exit(0);
                }
                if (wrongUIn.toLowerCase().equals("yes")) {
                    done = true;
                    Restart = true;
                } else {
                    done = false;
                }
            } while (!done);
            System.out.println("\n\n");
        } while (Restart);
    }
}

